# https://hg.nginx.org/pkg-oss/file/fd9484abcae4/alpine/nginx.default.conf

server {
    listen       8080;
    server_name  localhost;

    #access_log  /var/log/nginx/host.access.log  main;

    # https://gist.github.com/jerhon/827bd0a7d33784f0de90088f0536a373
    location / {
        root /usr/share/nginx/html;

        # This is due to nginx and the try_files behavior below, it will always
        # try to hit the index as part of try_files.  If I set index as something
        # that doesn't resolve, we don't have to worry about index.html being cached.
        #
        # If frequent updates occur, it's important that index.html not be cached 
        # in the browser.  Otherwise the software update will only occur when the
        # cached page expires.  The If-Modified-Since is a better way to handle this
        # for SPAs with frequent updates.
        index unresolvable-file-html.html;

        try_files $uri @index;
    }

    # This seperate location is so the no cache policy only applies to the index and nothing else.
    location @index {
        root /usr/share/nginx/html;
        add_header Cache-Control no-cache;
        expires 0;
        try_files /index.html =404;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

